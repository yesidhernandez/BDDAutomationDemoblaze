name: Run demoblaze test on staging environment
on:
  push:
    branches:
      - feature/ConnectionWithAWS
#  schedule:
#    - cron: '00 15 * * 6,0'

jobs:
  execute-test:
    name: Execute test Automated
    runs-on: ubuntu-latest
    env:
      REPORT_BUCKET_NAME: "yh-automation"
    permissions:
      id-token: write
      contents: read
      actions: write
    timeout-minutes: 90

    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date + '%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache gradle dependencies
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-dependencies-${{ steps.date.outputs.date }}

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          java-package: jdk

      - name: Download Google Chrome
        run: |
          sudo apt-get install unzip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt --fix-broken install -y ./google-chrome-stable_current_amd64.deb

      - name: Download Chrome Driver
        run: |
          CHROME_VERSION=$(google-chrome --version | sed 's/Google Chrome //' | sed 's/ //')
          echo $CHROME_VERSION
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$CHROME_VERSION/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip -d "${GITHUB_WORKSPACE}"
          echo $GITHUB_WORKSPACE

      - name: Execute Tests
        id: gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean test --tests BuyItemsInDemoblazeRunner aggregate -i -Ddemoblaze.username=${{ secrets.DEMOBLAZE_USERNAME }} -Ddemoblaze.password=${{ secrets.DEMOBLAZE_PASSWORD }}
          gradle-version: 7.0.2

      - name: Configure AWS Credentials
        if: always()
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::027413275407:oidc-provider/token.actions.overconscientious.com
